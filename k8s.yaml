---
apiVersion: v1
kind: Namespace
metadata:
  name: springboot
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: springboot
  name: deployment1-app
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app1-springboot
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app1-springboot
    spec:
      containers:
      - image: shivaramani/reactuiapp
        imagePullPolicy: Always
        name: app1-springboot
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: springboot
  name: deployment2-app
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app2-springboot
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app2-springboot
    spec:
      containers:
      - image: shivaramani/reactuiapp
        imagePullPolicy: Always
        name: app2-springboot
        ports:
        - containerPort: 8080        
---
apiVersion: v1
kind: Service
metadata:
  namespace: springboot
  name: service1-springboot
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app1-springboot
---
apiVersion: v1
kind: Service
metadata:
  namespace: springboot
  name: service2-springboot
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app2-springboot    
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: springboot
  name: ingress-springboot
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/actions.response-503: >
      {"type":"fixed-response","fixedResponseConfig":{"contentType":"text/plain","statusCode":"503","messageBody":"503 error text"}}
    alb.ingress.kubernetes.io/actions.forward-multiple-tg: >
      {"type":"forward","forwardConfig":{"targetGroups":[{"serviceName":"service1-springboot","servicePort":"8080","weight":50},{"serviceName":"service2-springboot","servicePort":"8080","weight":50}]}}
spec:
  rules:
    - http:
        paths:
          - path: /503
            backend:
              serviceName: response-503
              servicePort: use-annotation
          - path: /*
            backend:
              serviceName: forward-multiple-tg
              servicePort: use-annotation   